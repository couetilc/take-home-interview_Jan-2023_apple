#!/usr/bin/env bash

COMPOSE_FILE="compose.yml"
RAILS_URL="http://localhost"

cleanup() {
    docker compose down
}

logs() {
    docker compose logs --follow
}

preview() {
    docker compose up --wait
    while [[ "$(curl -s -o /dev/null -L -w '%{http_code}' ${RAILS_URL})" != "200" ]];
    do echo "waiting for rails app" && sleep 1;
    done
    echo 'opening rails app'
    open "$RAILS_URL"
}

psql() {
    docker compose exec db psql -U pguser "$@"
}

proxy() {
    docker compose exec proxy "$@"
}

proxy-fmt() {
    docker compose exec proxy caddy fmt /etc/caddy/Caddyfile "$@"
}

proxy-reload() {
    docker compose exec proxy caddy reload --config /etc/caddy/Caddyfile "$@"
}

ruby() {
    docker run \
        --workdir=/usr/src/app \
        --volume=/$(pwd)/webapp:/usr/src/app \
        ruby "$@"
}

tests() {
    docker compose exec webapp rails test
}

webapp() {
    docker compose exec webapp "$@"
}

webapp-run() {
    docker compose run webapp "$@"
}

if [ $# -gt 0 ]; then
    "$@"
else
    echo "Available commands:"
    declare -F | sed 's/^declare -f /\t/'
fi
